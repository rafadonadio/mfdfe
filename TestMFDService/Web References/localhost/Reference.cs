//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace TestMFDService.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MFDWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class MFDWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCAEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUltimoIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUltimoNroComprobanteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecipientCertificateFromStoreOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MFDWebService() {
            this.Url = global::TestMFDService.Properties.Settings.Default.TestMFDService_localhost_MFDWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCAECompletedEventHandler GetCAECompleted;
        
        /// <remarks/>
        public event GetUltimoIdCompletedEventHandler GetUltimoIdCompleted;
        
        /// <remarks/>
        public event GetUltimoNroComprobanteCompletedEventHandler GetUltimoNroComprobanteCompleted;
        
        /// <remarks/>
        public event GetRecipientCertificateFromStoreCompletedEventHandler GetRecipientCertificateFromStoreCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCAE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCAE(System.Xml.XmlNode xmlEmpresa, System.Xml.XmlNode xmlComprobante, out string logError, out string nroComprobante) {
            object[] results = this.Invoke("GetCAE", new object[] {
                        xmlEmpresa,
                        xmlComprobante});
            logError = ((string)(results[1]));
            nroComprobante = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCAEAsync(System.Xml.XmlNode xmlEmpresa, System.Xml.XmlNode xmlComprobante) {
            this.GetCAEAsync(xmlEmpresa, xmlComprobante, null);
        }
        
        /// <remarks/>
        public void GetCAEAsync(System.Xml.XmlNode xmlEmpresa, System.Xml.XmlNode xmlComprobante, object userState) {
            if ((this.GetCAEOperationCompleted == null)) {
                this.GetCAEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCAEOperationCompleted);
            }
            this.InvokeAsync("GetCAE", new object[] {
                        xmlEmpresa,
                        xmlComprobante}, this.GetCAEOperationCompleted, userState);
        }
        
        private void OnGetCAEOperationCompleted(object arg) {
            if ((this.GetCAECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCAECompleted(this, new GetCAECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUltimoId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> GetUltimoId(System.Xml.XmlNode xmlEmpresa) {
            object[] results = this.Invoke("GetUltimoId", new object[] {
                        xmlEmpresa});
            return ((System.Nullable<long>)(results[0]));
        }
        
        /// <remarks/>
        public void GetUltimoIdAsync(System.Xml.XmlNode xmlEmpresa) {
            this.GetUltimoIdAsync(xmlEmpresa, null);
        }
        
        /// <remarks/>
        public void GetUltimoIdAsync(System.Xml.XmlNode xmlEmpresa, object userState) {
            if ((this.GetUltimoIdOperationCompleted == null)) {
                this.GetUltimoIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUltimoIdOperationCompleted);
            }
            this.InvokeAsync("GetUltimoId", new object[] {
                        xmlEmpresa}, this.GetUltimoIdOperationCompleted, userState);
        }
        
        private void OnGetUltimoIdOperationCompleted(object arg) {
            if ((this.GetUltimoIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUltimoIdCompleted(this, new GetUltimoIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUltimoNroComprobante", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> GetUltimoNroComprobante(System.Xml.XmlNode xmlEmpresa, System.Xml.XmlNode xmlComprobante) {
            object[] results = this.Invoke("GetUltimoNroComprobante", new object[] {
                        xmlEmpresa,
                        xmlComprobante});
            return ((System.Nullable<int>)(results[0]));
        }
        
        /// <remarks/>
        public void GetUltimoNroComprobanteAsync(System.Xml.XmlNode xmlEmpresa, System.Xml.XmlNode xmlComprobante) {
            this.GetUltimoNroComprobanteAsync(xmlEmpresa, xmlComprobante, null);
        }
        
        /// <remarks/>
        public void GetUltimoNroComprobanteAsync(System.Xml.XmlNode xmlEmpresa, System.Xml.XmlNode xmlComprobante, object userState) {
            if ((this.GetUltimoNroComprobanteOperationCompleted == null)) {
                this.GetUltimoNroComprobanteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUltimoNroComprobanteOperationCompleted);
            }
            this.InvokeAsync("GetUltimoNroComprobante", new object[] {
                        xmlEmpresa,
                        xmlComprobante}, this.GetUltimoNroComprobanteOperationCompleted, userState);
        }
        
        private void OnGetUltimoNroComprobanteOperationCompleted(object arg) {
            if ((this.GetUltimoNroComprobanteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUltimoNroComprobanteCompleted(this, new GetUltimoNroComprobanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecipientCertificateFromStore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetRecipientCertificateFromStore(string recipientName) {
            object[] results = this.Invoke("GetRecipientCertificateFromStore", new object[] {
                        recipientName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecipientCertificateFromStoreAsync(string recipientName) {
            this.GetRecipientCertificateFromStoreAsync(recipientName, null);
        }
        
        /// <remarks/>
        public void GetRecipientCertificateFromStoreAsync(string recipientName, object userState) {
            if ((this.GetRecipientCertificateFromStoreOperationCompleted == null)) {
                this.GetRecipientCertificateFromStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecipientCertificateFromStoreOperationCompleted);
            }
            this.InvokeAsync("GetRecipientCertificateFromStore", new object[] {
                        recipientName}, this.GetRecipientCertificateFromStoreOperationCompleted, userState);
        }
        
        private void OnGetRecipientCertificateFromStoreOperationCompleted(object arg) {
            if ((this.GetRecipientCertificateFromStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecipientCertificateFromStoreCompleted(this, new GetRecipientCertificateFromStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCAECompletedEventHandler(object sender, GetCAECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCAECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCAECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string logError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string nroComprobante {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUltimoIdCompletedEventHandler(object sender, GetUltimoIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUltimoIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUltimoIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<long> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<long>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetUltimoNroComprobanteCompletedEventHandler(object sender, GetUltimoNroComprobanteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUltimoNroComprobanteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUltimoNroComprobanteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<int> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<int>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetRecipientCertificateFromStoreCompletedEventHandler(object sender, GetRecipientCertificateFromStoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecipientCertificateFromStoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecipientCertificateFromStoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591